{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Layout from '../../../../components/publicLayout';\n\nvar Index = function Index(props) {\n  __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"if(props.post.success) \", __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Goto Index\")), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"This is a post!\")));\n};\n\nIndex.getInitialProps = function _callee(ctx) {\n  var res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/api/v1/posts\".concat(ctx.asPath)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          post = _context.sent;\n\n          if (post.error && res) {\n            res.statusCode = 404;\n          }\n\n          console.log(\"Show data fetched. Count: \".concat(post.data.id));\n          return _context.abrupt(\"return\", post);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js"],"names":["Link","useRouter","Layout","Index","props","post","title","getInitialProps","ctx","fetch","asPath","res","json","error","statusCode","console","log","data","id"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CAFN;AASD,CAVD;;AAYAH,KAAK,CAACI,eAAN,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAENC,KAAK,6CAAsCD,GAAG,CAACE,MAA1C,EAFC;;AAAA;AAElBC,UAAAA,GAFkB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBP,UAAAA,IAHgB;;AAKtB,cAAIA,IAAI,CAACQ,KAAL,IAAcF,GAAlB,EAAuB;AACrBA,YAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD;;AAEDC,UAAAA,OAAO,CAACC,GAAR,qCAAyCX,IAAI,CAACY,IAAL,CAAUC,EAAnD;AATsB,2CAWfb,IAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeF,KAAf","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Layout from '../../../../components/publicLayout'\n\nconst Index = props => {\n  <Layout>\n    if(props.post.success) {\n        <div>\n          <Link href=\"/\"><a>Goto Index</a></Link>\n          <h1>{props.post.title}</h1>\n          <p>This is a post!</p>\n        </div>\n    }\n  </Layout>\n}\n\nIndex.getInitialProps = async ctx => {\n\n  let res = await fetch(`http://localhost:8080/api/v1/posts${ctx.asPath}`);\n  const post = await res.json();\n\n  if (post.error && res) {\n    res.statusCode = 404;\n  }\n\n  console.log(`Show data fetched. Count: ${post.data.id}`);\n\n  return post;\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}