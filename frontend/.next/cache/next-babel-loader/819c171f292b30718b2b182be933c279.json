{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nexport default function Index(_ref) {\n  var post = _ref.post;\n\n  if (post.error) {\n    return __jsx(Error, {\n      statusCode: 404,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    });\n  }\n\n  var router = useRouter();\n  var slug = router.asPath; // remove \"/\"\n\n  slug = slug.substr(1);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Goto Index\")), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"This is a post!\"));\n}\n\nIndex.getInitialProps = function _callee(ctx) {\n  var res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/api/v1/posts\".concat(ctx.asPath)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          post = _context.sent;\n\n          if (post.error && res) {\n            res.statusCode = 404;\n          }\n\n          console.log(\"Show data fetched. Count: \".concat(reqRes.data.id));\n          return _context.abrupt(\"return\", post);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js"],"names":["Link","useRouter","Index","post","error","router","slug","asPath","substr","title","getInitialProps","ctx","fetch","res","json","statusCode","console","log","reqRes","data","id"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,KAAT,OAAyB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACtC,MAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAIK,IAAI,GAAGD,MAAM,CAACE,MAAlB,CALsC,CAMtC;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAP;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF;AAOD;;AAEDP,KAAK,CAACQ,eAAN,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAENC,KAAK,6CAAsCD,GAAG,CAACJ,MAA1C,EAFC;;AAAA;AAElBM,UAAAA,GAFkB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBX,UAAAA,IAHgB;;AAKtB,cAAIA,IAAI,CAACC,KAAL,IAAcS,GAAlB,EAAuB;AACrBA,YAAAA,GAAG,CAACE,UAAJ,GAAiB,GAAjB;AACD;;AAEDC,UAAAA,OAAO,CAACC,GAAR,qCAAyCC,MAAM,CAACC,IAAP,CAAYC,EAArD;AATsB,2CAWfjB,IAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nexport default function Index({ post }) {\n  if (post.error) {\n    return <Error statusCode={404} />;\n  }\n  const router = useRouter();\n  let slug = router.asPath;\n  // remove \"/\"\n  slug = slug.substr(1);\n  return (\n    <div>\n      <Link href=\"/\"><a>Goto Index</a></Link>\n      <h1>{post.title}</h1>\n      <p>This is a post!</p>\n    </div>\n  );\n}\n\nIndex.getInitialProps = async ctx => {\n\n  let res = await fetch(`http://localhost:8080/api/v1/posts${ctx.asPath}`);\n  const post = await res.json();\n\n  if (post.error && res) {\n    res.statusCode = 404;\n  }\n\n  console.log(`Show data fetched. Count: ${reqRes.data.id}`);\n\n  return post;\n};\n"]},"metadata":{},"sourceType":"module"}