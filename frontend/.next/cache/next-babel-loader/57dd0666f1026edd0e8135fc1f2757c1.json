{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Layout from '../../../../components/publicLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(post) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Goto Index\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, post.data.createdAt), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Author: \", post.data.authorid), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, post.data.title), post.data.tags.map(function (tag) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, tag, \"}\");\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Tags: \", post.data.tags), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, post.data.body), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Views: \", post.data.views));\n};\n\nIndex.getInitialProps = function _callee(ctx) {\n  var res, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/api/v1/posts\".concat(ctx.asPath)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          post = _context.sent;\n\n          if (post.error && res) {\n            res.statusCode = 404;\n          }\n\n          console.log(\"Show data fetched. Count: \".concat(post.data.id));\n          return _context.abrupt(\"return\", post);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/pages/[year]/[month]/[slug]/index.js"],"names":["Link","useRouter","Layout","fetch","Index","post","data","createdAt","authorid","title","tags","map","tag","body","views","getInitialProps","ctx","asPath","res","json","error","statusCode","console","log","id"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI;AAAA,SAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,IAAL,CAAUC,SAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYF,IAAI,CAACC,IAAL,CAAUE,QAAtB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACC,IAAL,CAAUG,KAAf,CAJF,EAKGJ,IAAI,CAACC,IAAL,CAAUI,IAAV,CAAeC,GAAf,CAAmB,UAAAC,GAAG;AAAA,WACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,GAAJ,MADuB;AAAA,GAAtB,CALH,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,IAAI,CAACC,IAAL,CAAUI,IAApB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACC,IAAL,CAAUO,IAAd,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWR,IAAI,CAACC,IAAL,CAAUQ,KAArB,CAVF,CAFc;AAAA,CAAlB;;AAiBAV,KAAK,CAACW,eAAN,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAENb,KAAK,6CAAsCa,GAAG,CAACC,MAA1C,EAFC;;AAAA;AAElBC,UAAAA,GAFkB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBd,UAAAA,IAHgB;;AAKtB,cAAIA,IAAI,CAACe,KAAL,IAAcF,GAAlB,EAAuB;AACrBA,YAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD;;AAEDC,UAAAA,OAAO,CAACC,GAAR,qCAAyClB,IAAI,CAACC,IAAL,CAAUkB,EAAnD;AATsB,2CAWfnB,IAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeD,KAAf","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Layout from '../../../../components/publicLayout'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = post => (\n  \n    <div>\n      <Link href=\"/\"><a>Goto Index</a></Link>\n      <p>{post.data.createdAt}</p>\n      <p>Author: {post.data.authorid}</p>\n      <h1>{post.data.title}</h1>\n      {post.data.tags.map(tag => (\n      <p>{tag}}</p>\n      ))}\n      <p>Tags: {post.data.tags}</p>\n      <p>{post.data.body}</p>\n      <p>Views: {post.data.views}</p>\n    </div>\n  \n);\n\nIndex.getInitialProps = async ctx => {\n\n  let res = await fetch(`http://localhost:8080/api/v1/posts${ctx.asPath}`);\n  const post = await res.json();\n\n  if (post.error && res) {\n    res.statusCode = 404;\n  }\n\n  console.log(`Show data fetched. Count: ${post.data.id}`);\n\n  return post;\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}