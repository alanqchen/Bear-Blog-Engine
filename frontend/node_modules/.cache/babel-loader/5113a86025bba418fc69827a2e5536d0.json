{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findElPosition = findElPosition;\nexports.getPointerPosition = getPointerPosition;\nexports.blurNode = blurNode;\nexports.focusNode = focusNode;\nexports.hasClass = hasClass;\n/**\n * Offset Left\n * getBoundingClientRect technique from\n * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @function findElPosition\n * @param {ReactNodeRef} el React Node ref from which to get offset\n * @return {Object}\n */\n\nfunction findElPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var _document = document,\n      body = _document.body,\n      docEl = _document.documentElement;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Get pointer position in a React Node ref\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @function getPointerPosition\n * @param {ReactNodeRef} el React Node ref on which to get the pointer position on\n * @param {Event} event Event object\n * @return {Object} This object will have x and y coordinates corresponding to the mouse position\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findElPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var evtPageY = event.pageY;\n  var evtPageX = event.pageX;\n\n  if (event.changedTouches) {\n    evtPageX = event.changedTouches[0].pageX;\n    evtPageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - evtPageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (evtPageX - boxX) / boxW));\n  return position;\n} // blur an element\n\n\nfunction blurNode(reactNode) {\n  if (reactNode && reactNode.blur) {\n    reactNode.blur();\n  }\n} // focus an element\n\n\nfunction focusNode(reactNode) {\n  if (reactNode && reactNode.focus) {\n    reactNode.focus();\n  }\n} // check if an element has a class name\n\n\nfunction hasClass(elm, cls) {\n  var classes = elm.className.split(' ');\n\n  for (var i = 0; i < classes.length; i++) {\n    if (classes[i].toLowerCase() === cls.toLowerCase()) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/aqchen/go/src/github.com/alanqchen/Bear-Post/frontend/node_modules/video-react/lib/utils/dom.js"],"names":["Object","defineProperty","exports","value","findElPosition","getPointerPosition","blurNode","focusNode","hasClass","el","box","getBoundingClientRect","parentNode","left","top","_document","document","body","docEl","documentElement","clientLeft","scrollLeft","window","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","evtPageY","pageY","evtPageX","pageX","changedTouches","y","max","min","x","reactNode","blur","focus","elm","cls","classes","className","split","i","length","toLowerCase"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findElPosition = findElPosition;\nexports.getPointerPosition = getPointerPosition;\nexports.blurNode = blurNode;\nexports.focusNode = focusNode;\nexports.hasClass = hasClass;\n\n/**\n * Offset Left\n * getBoundingClientRect technique from\n * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @function findElPosition\n * @param {ReactNodeRef} el React Node ref from which to get offset\n * @return {Object}\n */\nfunction findElPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var _document = document,\n      body = _document.body,\n      docEl = _document.documentElement;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Get pointer position in a React Node ref\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @function getPointerPosition\n * @param {ReactNodeRef} el React Node ref on which to get the pointer position on\n * @param {Event} event Event object\n * @return {Object} This object will have x and y coordinates corresponding to the mouse position\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findElPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var evtPageY = event.pageY;\n  var evtPageX = event.pageX;\n\n  if (event.changedTouches) {\n    evtPageX = event.changedTouches[0].pageX;\n    evtPageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - evtPageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (evtPageX - boxX) / boxW));\n  return position;\n} // blur an element\n\n\nfunction blurNode(reactNode) {\n  if (reactNode && reactNode.blur) {\n    reactNode.blur();\n  }\n} // focus an element\n\n\nfunction focusNode(reactNode) {\n  if (reactNode && reactNode.focus) {\n    reactNode.focus();\n  }\n} // check if an element has a class name\n\n\nfunction hasClass(elm, cls) {\n  var classes = elm.className.split(' ');\n\n  for (var i = 0; i < classes.length; i++) {\n    if (classes[i].toLowerCase() === cls.toLowerCase()) {\n      return true;\n    }\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}