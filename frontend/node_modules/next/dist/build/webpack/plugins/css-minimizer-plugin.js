"use strict";exports.__esModule=true;exports.CssMinimizerPlugin=void 0;var _cssnanoSimple=require("cssnano-simple");var _webpackSources=require("webpack-sources");const CSS_REGEX=/\.css(\?.*)?$/i;class CssMinimizerPlugin{constructor(options){this.__next_css_remove=true;this.options=void 0;this.options=options;}apply(compiler){compiler.hooks.compilation.tap('CssMinimizerPlugin',compilation=>{compilation.hooks.optimizeChunkAssets.tapPromise('CssMinimizerPlugin',chunks=>Promise.all(chunks.reduce((acc,chunk)=>acc.concat(chunk.files||[]),[]).filter(entry=>CSS_REGEX.test(entry)).map(file=>{const postcssOptions={...this.options.postcssOptions,to:file,from:file};const asset=compilation.assets[file];let input;if(postcssOptions.map&&asset.sourceAndMap){const{source,map}=asset.sourceAndMap();input=source;postcssOptions.map.prev=map?map:false;}else{input=asset.source();}return(0,_cssnanoSimple.process)(input,postcssOptions).then(res=>{if(res.map){compilation.assets[file]=new _webpackSources.SourceMapSource(res.css,file,res.map.toJSON());}else{compilation.assets[file]=new _webpackSources.RawSource(res.css);}});})));});}}exports.CssMinimizerPlugin=CssMinimizerPlugin;